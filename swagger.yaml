openapi: 3.0.0
info:
  title: Book Management API
  description: API for managing books and fetching weather data.
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /books:
    get:
      summary: Fetch all books
      description: Retrieve a list of all books in the system.
      responses:
        200:
          description: A list of books.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "1"
                    title:
                      type: string
                      example: "1984"
                    author:
                      type: string
                      example: "George Orwell"
                    year:
                      type: integer
                      example: 1949
                    genre:
                      type: string
                      example: "Dystopian"
    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "To Kill a Mockingbird"
                author:
                  type: string
                  example: "Harper Lee"
                year:
                  type: integer
                  example: 1960
                genre:
                  type: string
                  example: "Fiction"
      responses:
        201:
          description: Book added successfully.

  /books/{id}:
    put:
      summary: Update a book's details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the book to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Updated Title"
                author:
                  type: string
                  example: "Updated Author"
                year:
                  type: integer
                  example: 2023
                genre:
                  type: string
                  example: "Updated Genre"
      responses:
        200:
          description: Book updated successfully.

    delete:
      summary: Delete a book
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the book to delete.
      responses:
        200:
          description: Book deleted successfully.

  /weather:
    get:
      summary: Get weather information
      parameters:
        - in: query
          name: city
          required: true
          schema:
            type: string
          description: Name of the city to fetch weather for.
        - in: query
          name: country
          required: false
          schema:
            type: string
          description: ISO country code for the city.
      responses:
        200:
          description: Weather information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  city:
                    type: string
                    example: "London"
                  temperature:
                    type: string
                    example: "15Â°C"
                  condition:
                    type: string
                    example: "Cloudy"
